use Libraries.Game.Game
use Libraries.Interface.Events.CollisionEvent2D
use Libraries.Interface.Events.CollisionListener2D
use Libraries.Sound.Speech
use Libraries.Game.Graphics.Drawable
use Libraries.Interface.Events.KeyboardEvent
use Libraries.Game.InputMonitor
use Libraries.Compute.Random

/*
    This is a default class for creating a game in Quorum. Note that the Main 
    action begins by calling StartGame(), which loads a window a game can 
    be displayed in. The action CreateGame is where the game should load any 
    assets, like images to be displayed, frames of animation, or sounds to be
    played. 
*/
class Main is Game, CollisionListener2D

    Drawable banana
    Drawable monkey
    KeyboardEvent button
    InputMonitor im
    Speech talk
    Random x
    Random y
    /*
        This action, Main, starts our computer program. In Quorum, programs always
        begin from Main.
    */
    action Main
        SetScreenSize(1000,1000)
        StartGame()
    end

    /*
        This action sets up the default values for a game. For example, we might
        use the Libraries.Game.Graphics.Drawable class to load up an image or 
        a shape. Or, we might add a Libraries.Interface.Button for making something clickable
        or a Libraries.Interface.TextBox for gathering user input in a game. */

    action CreateGame

        
        monkey:Load("monkey-png-19.png")
        monkey:SetPosition(50,50)
        monkey:SetSize(200,200)
        monkey:SetName("monkey")
        monkey:SetCollidable(true)

        banana:Load("Banana-Bunch.png")
        banana:SetSize(100,100)
        banana:SetName("banana")
        banana:Hide()
        Add (banana)
        Add (monkey)
        banana:SetCollidable(true)

        AddCollisionListener(me)

    end

    /*
        The update action is called on every "frame" of animation in a game. This
        action should be used to do operations on items. So, for example, we 
        might use this action to change frames of animation, to rotate items, 
        or to make creatures jump.
    */
    action Update(number seconds)

        if im:IsKeyPressed(button:UP)
            monkey:SetY(monkey:GetY()+ 10)
        end

        if im:IsKeyPressed(button:DOWN)
            monkey:SetY(monkey:GetY()- 10)
        end

        if im:IsKeyPressed(button:RIGHT)
            monkey:SetX(monkey:GetX()+ 10)
        end

        if im:IsKeyPressed(button:LEFT)
            monkey:SetX(monkey:GetX()- 10)
        end

        if im:IsKeyPressed(button:X)
            Exit()
        end
        
        if monkey:GetX() > 900
            monkey:SetX(0)
        end
        if monkey:GetY() > 900 or monkey:GetY() < 0
            monkey:SetY(0)
        end
    end


    action BeginCollision (CollisionEvent2D event)
        talk:Say("Oh! Banana!")
    end

    action FinishCollision(CollisionEvent2D event)
        talk:Say("Banana gone!")
        banana:Hide()
        a = x:RandomIntegerBetween(0,900)
        b = y:RandomIntegerBetween(0,900)
        banana:SetPosition (a,b)
        banana:Show()
    end
end